{"version":3,"sources":["component/Header/Header.js","component/Body/container/Todo.js","component/Body/container/TodoList.js","component/Body/submit/Submit.js","component/Body/Body.js","component/Footer/Footer.js","TodoDemo.js","index.js"],"names":["Header","className","React","Component","Todo","props","id","type","value","content","TodoList","todos","tasks","map","todo","index","key","Submit","state","item","handleSubmit","bind","handleChange","e","preventDefault","this","onFormSubmit","setState","target","onSubmit","placeholder","onChange","Body","task","Footer","TodoDemo","ReactDOM","render","document","getElementById"],"mappings":"+WAiBeA,G,mLAZX,OACE,yBAAKC,UAAU,UACb,wBAAIA,UAAU,SAAd,sBACA,uBAAGA,UAAU,aACX,6F,GANWC,IAAMC,Y,kBC8BZC,MATf,SAAcC,GACZ,OACE,wBAAIJ,UAAWI,EAAMC,GAAK,IAAM,EAAI,KAAO,QACzC,2BAAOC,KAAK,WAAWN,UAAU,aACjC,2BAAOM,KAAK,OAAON,UAAU,aAAaO,MAAOH,EAAMI,YCoB9CC,MAnBf,SAAkBL,GAChB,IAAMM,EAAQN,EAAMO,MAAMC,KAAI,SAACC,EAAMC,GACnC,OACE,kBAAC,EAAD,CACEN,QAASK,EACTE,IAAKD,EACLT,GAAIS,OAMV,OACE,yBAAKd,UAAU,gBACb,4BAAKU,K,OCyCIM,G,wDAvCb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IACDa,MAAQ,CAAEC,KAAM,IACrB,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBAJH,E,yDAONE,GACXA,EAAEC,iBACsB,KAApBC,KAAKP,MAAMC,OAGbM,KAAKpB,MAAMqB,aAAaD,KAAKP,MAAMC,MACnCM,KAAKE,SAAS,CAAER,KAAM,Q,mCAIbI,GACXE,KAAKE,SAAS,CACZR,KAAMI,EAAEK,OAAOpB,U,+BAKjB,OACE,0BAAMP,UAAU,OAAO4B,SAAUJ,KAAKL,cACpC,2BACEb,KAAK,OACLN,UAAU,QACV6B,YAAY,aACZtB,MAAOiB,KAAKP,MAAMC,KAClBY,SAAUN,KAAKH,eAEjB,4BAAQrB,UAAU,UAAlB,Y,GAlCaC,IAAMC,YCiEZ6B,E,4MAvGbd,MAAQ,CACNN,MAAO,CACL,QACA,QACA,sBACA,6B,EAaJQ,aAAe,SAACa,GACd,EAAKN,SAAS,CAAEf,MAAM,GAAD,mBAAM,EAAKM,MAAMN,OAAjB,CAAwBqB,O,uDAI7C,OACE,yBAAKhC,UAAU,aACb,6BACE,kBAAC,EAAD,CAAQyB,aAAcD,KAAKL,eAC3B,kBAAC,EAAD,CACER,MAAOa,KAAKP,MAAMN,c,GA7BXV,IAAMC,WCUV+B,G,6KAVX,OACE,yBAAKjC,UAAU,UACb,4BAAQA,UAAU,iBAAlB,OACA,4BAAQA,UAAU,iBAAlB,UACA,4BAAQA,UAAU,iBAAlB,kB,GANaC,IAAMC,YCeZgC,E,uKAVX,OACE,yBAAKlC,UAAU,aACb,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GANeC,IAAMC,WCD7BiC,IAASC,OAAO,kBAAC,EAAD,MAAcC,SAASC,eAAe,W","file":"static/js/main.fd49c8eb.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./Header.css\";\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <h2 className=\"title\"> Jquery To Do List</h2>\n        <p className=\"sub-title\">\n          <em>Simple Todo List with adding and filter by diff status.</em>\n        </p>\n      </div>\n    );\n  }\n}\n\n// <em> 是斜体标签\nexport default Header;\n","import React from \"react\";\nimport \"./TodoList.css\";\n\n//这是每一条待办任务的组件\n/*\nclass Item extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n  }\n\n  render() {\n    return (\n      <li>\n        <input type=\"checkbox\"></input>\n        <input type=\"text\" value={this.props.task} />\n      </li>\n    );\n  }\n}\n\nexport default Item;\n*/\n\nfunction Todo(props) {\n  return (\n    <li className={props.id % 2 === 0 ? null : \"even\"}>\n      <input type=\"checkbox\" className=\"checkbox\" />\n      <input type=\"text\" className=\"input-text\" value={props.content} />\n    </li>\n  );\n}\n\nexport default Todo;\n","import React from \"react\";\nimport Todo from \"./Todo\";\nimport \"./TodoList.css\";\n\n/*\nclass ItemContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.props = props;\n  }\n  render() {\n    return (\n      <div>\n        <ol>\n          {this.props.tasks.map((task, index) => {\n            return <Item key={index} id={index} task={task} />;\n          })}\n        </ol>\n      </div>\n    );\n  }\n}\n\n\nexport default ItemContainer;\n*/\n\n//此处[todo]，是[tasks]中的[task]，来源于早期输入框中的[item]\n\nfunction TodoList(props) {\n  const todos = props.tasks.map((todo, index) => {\n    return (\n      <Todo\n        content={todo}\n        key={index}\n        id={index}\n        /*onDelete={props.onDelete}*/\n      />\n    );\n  });\n\n  return (\n    <div className=\"list-wrapper\">\n      <ol>{todos}</ol>\n    </div>\n  );\n}\n\nexport default TodoList;\n","import React from \"react\";\nimport \"./Submit.css\";\n\n//选择使用submit而不是add，强化表单意识\n\n/*\nclass Submit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { item: \"\" };\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.item === \"\") {\n      return;\n    } else {\n      this.props.onSubmit(this.state.item);\n      this.setState({ item: \"\" });\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Enter Task Name\"\n          value={this.state.item}\n          onChange={(e) => this.setState({ item: e.target.value })}\n        />\n        <button className=\"button\">Submit</button>\n      </form>\n    );\n  }\n}\n\nexport default Submit;\n*/\n\n//此处使用[item]为单位，将作为[task]被传入[tasks]中，并短暂地作为[todo]传入元素[todos]和[组件<Todo />]中\n\nclass Submit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { item: \"\" };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    if (this.state.item === \"\") {\n      return;\n    } else {\n      this.props.onFormSubmit(this.state.item); //调用Body中的函数，将任务添加到任务列表\n      this.setState({ item: \"\" }); //清空输入框\n    }\n  }\n\n  handleChange(e) {\n    this.setState({\n      item: e.target.value, //实时更新，使输入框中的值可变\n    });\n  }\n\n  render() {\n    return (\n      <form className=\"from\" onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Enter Item\"\n          value={this.state.item}\n          onChange={this.handleChange}\n        />\n        <button className=\"button\">Add</button>\n      </form>\n    );\n  }\n}\n\nexport default Submit;\n","import React from \"react\";\nimport \"./Body.css\";\nimport TodoList from \"./container/TodoList\";\nimport Submit from \"./submit/Submit\";\n\nclass Body extends React.Component {\n  state = {\n    tasks: [\n      \"task1\",\n      \"task2\",\n      \"Learning JavaScript\",\n      \"Learning somethingPretty\",\n    ],\n  };\n  //此处[tasks]中的[task]，来源于输入框中的[item]，将短暂地作为[todo]传入元素[todos]和组件[<Todo />]中\n\n  /*原例子中删除待办任务的功能\n  handelDelete = (index) => {\n    const newArr = [...this.state.tasks];\n    newArr.splice(index, 1);\n    this.setState({ tasks: newArr });\n  };\n  */\n\n  handleSubmit = (task) => {\n    this.setState({ tasks: [...this.state.tasks, task] });\n  };\n\n  render() {\n    return (\n      <div className=\"todo-body\">\n        <div>\n          <Submit onFormSubmit={this.handleSubmit} />\n          <TodoList\n            tasks={this.state.tasks}\n            /*onDelete={this.handelDelete}*/\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\n/* 展示一共有几个待办事项\nconst Header = (props) => {\n  return (\n    <div className=\"card-header\">\n      <h1 className=\"card-header-title header\">\n        You have {props.numTodos} Todos\n      </h1>\n    </div>\n  );\n};\n*/\n\n/*\nconst TodoList = (props) => {\n  const todos = props.tasks.map((todo, index) => {\n    return (\n      <Todo content={todo} key={index} id={index} onDelete={props.onDelete} />\n    );\n  });\n  return (\n    <div className=\"list-wrapper\">\n      <ol>{todos}</ol>\n    </div>\n  );\n};\n\nconst Todo = (props) => {\n  return (\n    <li className={props.id % 2 === 0 ? null : \"even\"}>\n      <input type=\"checkbox\" />\n      {props.content}\n    </li>\n  );\n};\n*/\n\n/*\nclass SubmitForm extends React.Component {\n  state = { term: \"\" };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.term === \"\") {\n      return;\n    } else {\n      this.props.onFormSubmit(this.state.term);\n      this.setState({ term: \"\" });\n    }\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Enter Item\"\n          value={this.state.term}\n          onChange={(e) => this.setState({ term: e.target.value })}\n        />\n        <button className=\"button\">Add</button>\n      </form>\n    );\n  }\n}*/\n\nexport default Body;\n","import React from \"react\";\nimport \"./Footer.css\";\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <div className=\"footer\">\n        <button className=\"button-footer\">All</button>\n        <button className=\"button-footer\">Active</button>\n        <button className=\"button-footer\">Completed</button>\n      </div>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport \"./TodoDemo.css\";\nimport Header from \"./component/Header/Header\";\nimport Body from \"./component/Body/Body\";\nimport Footer from \"./component/Footer/Footer\";\n\nclass TodoDemo extends React.Component {\n  render() {\n    return (\n      <div className=\"container\">\n        <Header />\n        <Body />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default TodoDemo;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport TodoDemo from \"./TodoDemo\";\n\nReactDOM.render(<TodoDemo />, document.getElementById(\"root\"));\n"],"sourceRoot":""}